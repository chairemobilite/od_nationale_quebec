# This workflow is used for the UI test on the survey.

name: Survey UI Test

on:
  push:
    branches: [main, 2025]
  # We are not running on Pull Request, since we need the Google API Key
  schedule:
    # Run daily tests to catch issues that could arise on a specific day
    # * is a special character in YAML so you have to quote this string
    - cron: "45 7 * * *"

jobs:
  build-and-test-ui:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
    strategy:
      matrix:
        node-version: [22.x]
        browser: [chrome, firefox] # We test on both Chrome and Firefox
    env:
      # FIXME: We should normally put NODE_ENV=production here, but some of the install and compile steps are not working well
      PROJECT_CONFIG: ${{ github.workspace }}/survey/config.js
      PG_CONNECTION_STRING_PREFIX: postgres://testuser:testpassword@localhost:5432/
      PG_DATABASE_PRODUCTION: testdb_${{ matrix.browser }} # Use a different DB for each browser to avoid conflicts
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
      CI: true ## This is to make sure that the tests run in CI mode
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: copy env file
        run: cp .env.example .env
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: yarn
      - name: Compile
        run: yarn compile
      - name: Build Client bundle
        run: yarn build:prod
        # Skipped build:admin since we don't have UI for them at the moment
      - name: Create DB
        run: yarn setup && yarn migrate
        env:
          NODE_ENV: production
      - name: Prepare prefilled data for the tests
        run: yarn node evolution/packages/evolution-backend/lib/tasks/importPreFilledResponses.task.js --file "$(pwd)/survey/tests/preFilledDataSample.csv"
        env:
          NODE_ENV: production
      - name: Get Playwright config
        run: cp survey/playwright-example.config.ts survey/playwright.config.ts
      - name: Install Playwright Browsers # Use this to install the browsers needed for Playwright
        run: yarn playwright install
      - name: Start application
        run: yarn start &
        env:
          NODE_ENV: production
      - name: Run UI test (${{ matrix.browser }})
        run: yarn test:ui --project '${{ matrix.browser }}'
        env:
          NODE_ENV: production
      - name: Archive UI Test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.browser }}-${{ matrix.node-version }} # This is to make sure that the results are stored in a unique name
          path: survey/test-results
          retention-days: 2
        # End of automated UI tests
