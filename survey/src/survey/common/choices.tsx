// This file was automatically generated by the Evolution Generator.
// The Evolution Generator is used to automate the creation of consistent, reliable code.
// Any changes made to this file will be overwritten.

import { type ChoiceType } from 'evolution-common/lib/services/questionnaire/types';
import * as conditionals from './conditionals';
import * as customConditionals from './customConditionals';

export const yes: ChoiceType[] = [
    {
        value: 'yes',
        label: {
            fr: 'Oui',
            en: 'Yes'
        }
    }
];

export const no: ChoiceType[] = [
    {
        value: 'no',
        label: {
            fr: 'Non',
            en: 'No'
        }
    }
];

export const other: ChoiceType[] = [
    {
        value: 'other',
        label: {
            fr: 'Autre (spécifiez)',
            en: 'Other (specify)'
        }
    }
];

export const otherWithoutSpecify: ChoiceType[] = [
    {
        value: 'other',
        label: {
            fr: 'Autre',
            en: 'Other'
        }
    }
];

export const dontKnow: ChoiceType[] = [
    {
        value: 'dontKnow',
        label: {
            fr: 'Je ne sais pas',
            en: 'I don\'t know'
        }
    }
];

export const preferNotAnswer: ChoiceType[] = [
    {
        value: 'preferNotAnswer',
        label: {
            fr: 'Je préfère ne pas répondre',
            en: 'I prefer not to answer'
        }
    }
];

export const yesNo: ChoiceType[] = [...yes, ...no];

export const yesNoDontKnow: ChoiceType[] = [...yesNo, ...dontKnow];

export const yesNoPreferNotAnswer: ChoiceType[] = [...yes, ...no, ...preferNotAnswer];

export const gender: ChoiceType[] = [
    {
        value: 'male',
        label: {
            fr: 'Homme',
            en: 'Man'
        }
    },
    {
        value: 'female',
        label: {
            fr: 'Femme',
            en: 'Woman'
        }
    },
    ...preferNotAnswer
];

export const participationStatus: ChoiceType[] = [
    {
        value: 'yesFullTime',
        label: {
            fr: 'Oui, à temps plein',
            en: 'Yes, full time'
        }
    },
    {
        value: 'yesPartTime',
        label: {
            fr: 'Oui, à temps partiel',
            en: 'Yes, part time'
        }
    },
    ...no
];

export const schoolType: ChoiceType[] = [
    {
        value: 'kindergarten',
        label: {
            fr: 'Garderie/CPE',
            en: 'Kindergarten/Childcare/CPE'
        },
        conditional: conditionals.ifAge5OrLessConditional
    },
    {
        value: 'primarySchool',
        label: {
            fr: 'École primaire',
            en: 'Primary school'
        },
        conditional: conditionals.ifAge4to13Conditional
    },
    {
        value: 'secondarySchool',
        label: {
            fr: 'École secondaire',
            en: 'Secondary school'
        },
        conditional: conditionals.ifAge11OrMoreConditional
    },
    {
        value: 'schoolAtHome',
        label: {
            fr: 'École à la maison',
            en: 'School at home'
        }
    },
    {
        value: 'collegeCegepDepAep',
        label: {
            fr: 'CEGEP / Collège / DEP / AEP',
            en: 'CEGEP / College / DEP / AEP'
        },
        conditional: conditionals.ifAge15OrMoreConditional
    },
    ...other
];

export const personOccupation: ChoiceType[] = [
    {
        value: 'fullTimeWorker',
        label: {
            fr: 'Travail à temps plein (30h et plus/semaine)',
            en: 'Employed full-time (30h and more/week)'
        }
    },
    {
        value: 'partTimeWorker',
        label: {
            fr: 'Travail à temps partiel (moins de 30h/semaine)',
            en: 'Employed part-time (less than 30h/week)'
        }
    },
    {
        value: 'workerAndStudent',
        label: {
            fr: 'Travail et études',
            en: 'Work and studies'
        }
    },
    {
        value: 'fullTimeStudent',
        label: {
            fr: 'Études à temps plein',
            en: 'Full-time student'
        }
    },
    {
        value: 'partTimeStudent',
        label: {
            fr: 'Études à temps partiel',
            en: 'Part-time student'
        }
    },
    {
        value: 'retired',
        label: {
            fr: 'À la retraite',
            en: 'Retired'
        },
        conditional: conditionals.ifAge40OrMoreConditional
    },
    {
        value: 'atHome',
        label: {
            fr: 'À la maison',
            en: 'At home'
        }
    },
    {
        value: 'unemployed',
        label: {
            fr: 'En chômage / en recherche d\'emploi',
            en: 'Unemployed / searching for a job'
        }
    },
    {
        value: 'sickOrParentalLeave',
        label: {
            fr: 'Congé de maladie ou congé parental',
            en: 'Sick leave or parental leave'
        }
    },
    {
        value: 'longTermDisability',
        label: {
            fr: 'Invalidité de longue durée',
            en: 'Long-term disability'
        }
    },
    {
        value: 'volunteer',
        label: {
            fr: 'Bénévole',
            en: 'Volunteer'
        }
    },
    {
        value: 'other',
        label: {
            fr: 'Autre',
            en: 'Other'
        }
    },
    {
        value: 'preferNotToAnswer',
        label: {
            fr: 'Préfère ne pas répondre',
            en: 'Prefer not to answer'
        }
    }
];

export const transitFareType: ChoiceType[] = [
    ...no,
    {
        value: 'transitPass',
        label: {
            fr: 'Passe ou titre mensuel ou annuel',
            en: 'Monthly or annual pass'
        }
    },
    {
        value: 'tickets',
        label: {
            fr: 'Titres ou billets individuels',
            en: 'Individual tickets or rides'
        }
    },
    ...dontKnow
];

export const workLocationType: ChoiceType[] = [
    {
        value: 'onLocation',
        label: {
            fr: 'Oui, travail au lieu fixe en présentiel en tout temps',
            en: 'Yes, always on-site at fixed location'
        }
    },
    {
        value: 'hybrid',
        label: {
            fr: 'Oui, travail en mode hybride (télétravail et en présentiel)',
            en: 'Yes, hybrid work (remote and on-site)'
        }
    },
    {
        value: 'onTheRoadWithUsualPlace',
        label: {
            fr: 'Oui, travail sur la route avec départ d\'un lieu fixe (ex: garage, bureau, poste, restaurant, etc.)',
            en: 'Yes, work on the road departing from a fixed location (ex: garage, office, station, restaurant, etc.)'
        }
    },
    {
        value: 'onTheRoadWithoutUsualPlace',
        label: {
            fr: 'Non, travail sur la route avec départ du domicile',
            en: 'No, work on the road departing from home'
        }
    },
    {
        value: 'remote',
        label: {
            fr: 'Non, travail à partir du domicile ou à distance',
            en: 'No, work from home or from elsewhere'
        }
    }
];

export const studyLocationType: ChoiceType[] = [
    {
        value: 'onLocation',
        label: {
            fr: 'Oui, études au lieu fixe en présentiel en tout temps',
            en: 'Yes, always on-site at fixed location'
        }
    },
    {
        value: 'hybrid',
        label: {
            fr: 'Oui, études en mode hybride (télé-études et en présentiel)',
            en: 'Yes, hybrid studies (remote and on-site)'
        }
    },
    {
        value: 'remote',
        label: {
            fr: 'Non, études à partir du domicile ou à distance',
            en: 'No, remote studies from home or from elsewhere'
        }
    }
];

export const householdIncomeChoices: ChoiceType[] = [
    {
        value: '000000_009999',
        label: {
            fr: 'Moins de 10 000 $',
            en: 'Less than $10,000'
        }
    },
    {
        value: '010000_019999',
        label: {
            fr: '10 000$ à 19 999$',
            en: '$10,000 to $19,999'
        }
    },
    {
        value: '020000_029999',
        label: {
            fr: '20 000$ à 29 999$',
            en: '$20,000 to $29,999'
        }
    },
    {
        value: '030000_039999',
        label: {
            fr: '30 000$ à 39 999$',
            en: '$30,000 to $39,999'
        }
    },
    {
        value: '040000_049999',
        label: {
            fr: '40 000$ à 49 999$',
            en: '$40,000 to $49,999'
        }
    },
    {
        value: '050000_059999',
        label: {
            fr: '50 000$ à 59 999$',
            en: '$50,000 to $59,999'
        }
    },
    {
        value: '060000_069999',
        label: {
            fr: '60 000$ à 69 999$',
            en: '$60,000 to $69,999'
        }
    },
    {
        value: '070000_079999',
        label: {
            fr: '70 000$ à 79 999$',
            en: '$70,000 to $79,999'
        }
    },
    {
        value: '080000_089999',
        label: {
            fr: '80 000$ à 89 999$',
            en: '$80,000 to $89,999'
        }
    },
    {
        value: '090000_099999',
        label: {
            fr: '90 000$ à 99 999$',
            en: '$90,000 to $99,999'
        }
    },
    {
        value: '100000_149999',
        label: {
            fr: '100 000$ à 149 999$',
            en: '$100,000 to $149,999'
        }
    },
    {
        value: '150000_199999',
        label: {
            fr: '150 000$ à 199 999$',
            en: '$150,000 to $199,999'
        }
    },
    {
        value: '200000_999999',
        label: {
            fr: '200 000 $ et plus',
            en: '$200,000 and more'
        }
    },
    {
        value: 'dontKnow',
        label: {
            fr: 'Je ne sais pas',
            en: 'I don\'t know'
        }
    },
    {
        value: 'refusal',
        label: {
            fr: 'Je préfère ne pas répondre',
            en: 'I prefer not to respond'
        }
    }
];

export const householdOwnershipChoices: ChoiceType[] = [
    {
        value: 'tenant',
        label: {
            fr: 'Locataire',
            en: 'Tenant'
        }
    },
    {
        value: 'owner',
        label: {
            fr: 'Propriétaire',
            en: 'Owner'
        }
    },
    {
        value: 'other',
        label: {
            fr: 'Autre',
            en: 'Other'
        }
    },
    {
        value: 'preferNotToAnswer',
        label: {
            fr: 'Je préfère ne pas répondre',
            en: 'I prefer not to respond'
        }
    }
];

export const departurePlaceOtherChoices: ChoiceType[] = [
    {
        value: 'otherParentHome',
        label: {
            fr: '<strong>Domicile de l\'autre parent ou tuteur</strong>',
            en: '<strong>Home of the other parent or guardian</strong>'
        },
        conditional: conditionals.ifAge16OrLessConditional
    },
    {
        value: 'workedOvernight',
        label: {
            fr: '<strong>Travaillait de nuit</strong>',
            en: '<strong>Worked overnight</strong>'
        },
        conditional: conditionals.isWorkerConditional
    },
    {
        value: 'secondaryHome',
        label: {
            fr: '<strong>Résidence secondaire</strong> (chalet ou autre)',
            en: '<strong>Secondary residence</strong> (cottage or other)'
        }
    },
    {
        value: 'sleptAtFriends',
        label: {
            fr: 'Passait la nuit chez <strong>ami, copine/copain ou famille</strong>',
            en: 'Stayed at a <strong>friend’s, partner’s or family’s home</strong>'
        }
    },
    {
        value: 'restaurant',
        label: {
            fr: 'Était à un ou revenait d\'un <strong>restaurant ou bar</strong>',
            en: 'Was at or was coming back from a <strong>restaurant or bar</strong>'
        }
    },
    {
        value: 'hotelForWork',
        label: {
            fr: 'Hôtel ou autre lieu pour une <strong>conférence / travail</strong>',
            en: 'Hotel or other venue for <strong>a conference / work</strong>'
        },
        conditional: conditionals.isWorkerConditional
    },
    {
        value: 'hotelForVacation',
        label: {
            fr: 'Hôtel ou autre lieu en <strong>vacances</strong>',
            en: 'Hôtel or other on <strong>vacation</strong>'
        }
    },
    {
        value: 'studying',
        label: {
            fr: '<strong>Écoles / lieu d’études</strong>: terminait des travaux ou y couchait',
            en: '<strong>School / place of study</strong>: studied or slept there'
        },
        conditional: conditionals.isStudentConditional
    },
    {
        value: 'other',
        label: {
            fr: 'Autre',
            en: 'Other'
        }
    }
];

export const onTheRoadArrivalTypeChoices: ChoiceType[] = [
    {
        value: 'home',
        label: {
            fr: 'Domicile',
            en: 'Home'
        }
    },
    {
        value: 'usualWorkPlace',
        label: {
            fr: 'Lieu de travail habituel',
            en: 'Usual work place'
        },
        conditional: conditionals.onTheRoadUsualWorkplace
    },
    {
        value: 'other',
        label: {
            fr: 'Autre lieu',
            en: 'Other location'
        }
    },
    {
        value: 'stayedThereUntilTheNextDay',
        label: {
            fr: '{{nickname}} a complété ses déplacements sur la route après 4:00 du matin le lendemain',
            en: 'Stayed at this place until the next day'
        },
        conditional: customConditionals.isLastPlaceCustomConditional
    }
];
