// This file was automatically generated by the Evolution Generator.
// The Evolution Generator is used to automate the creation of consistent, reliable code.
// Any changes made to this file will be overwritten.

import { isSectionCompleted } from 'evolution-common/lib/services/questionnaire/sections/navigationHelpers';
import { SectionConfig } from 'evolution-common/lib/services/questionnaire/types';
import { widgetsNames } from './widgetsNames';
import { allPersonsTripDiariesCompleted } from '../../common/helper';
import { updateHouseholdSizeFromPersonCount } from '../../common/customHelpers';

export const currentSectionName: string = 'longDistance';
const previousSectionName: SectionConfig['previousSection'] = 'personsTrips';
const nextSectionName: SectionConfig['nextSection'] = 'end';

// Config for the section
export const sectionConfig: SectionConfig = {
    previousSection: previousSectionName,
    nextSection: nextSectionName,
    title: {
        fr: 'Fin',
        en: 'End'
    },
    navMenu: {
        type: 'inNav',
        menuName: {
            fr: 'Fin',
            en: 'End'
        }
    },
    widgets: widgetsNames,
    // Allow to click on the section menu
    enableConditional: function (interview) {
        return allPersonsTripDiariesCompleted(interview);
    },
    // Allow to click on the section menu, completed when the 'end' child section is completed
    completionConditional: function (interview) {
        return isSectionCompleted({ interview, sectionName: nextSectionName });
    },
    onSectionEntry: updateHouseholdSizeFromPersonCount
};

export default sectionConfig;
