// This file was automatically generated by the Evolution Generator.
// The Evolution Generator is used to automate the creation of consistent, reliable code.
// Any changes made to this file will be overwritten.

import { isSectionCompleted } from 'evolution-common/lib/services/questionnaire/sections/navigationHelpers';
import { SectionConfig } from 'evolution-common/lib/services/questionnaire/types';
import { widgetsNames } from './widgetsNames';
import { customPreload } from './customPreload';
import { getResponse } from 'evolution-common/lib/utils/helpers';
import moment from 'moment';

export const currentSectionName: string = 'home';
const previousSectionName: SectionConfig['previousSection'] = null;
const nextSectionName: SectionConfig['nextSection'] = 'household';

// Config for the section
export const sectionConfig: SectionConfig = {
    previousSection: previousSectionName,
    nextSection: nextSectionName,
    title: {
        fr: 'Domicile',
        en: 'Home'
    },
    navMenu: {
        type: 'inNav',
        menuName: {
            fr: 'Domicile',
            en: 'Home'
        }
    },
    widgets: widgetsNames,
    // Do some actions before the section is loaded
    preload: customPreload,
    // Allow to click on the section menu
    enableConditional: true,
    // Allow to click on the section menu
    completionConditional: function (interview) {
        return isSectionCompleted({ interview, sectionName: currentSectionName });
    },
    onSectionEntry: function (interview, _iterationContext) {
        const previousDay = getResponse(interview, '_previousDay');
        if (!previousDay) {
            return { 'response._previousDay': moment().subtract(1, 'days').format('YYYY-MM-DD') };
        }
        return undefined;
    }
};

export default sectionConfig;
