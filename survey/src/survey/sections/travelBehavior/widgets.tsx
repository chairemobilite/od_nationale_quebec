// This file was automatically generated by the Evolution Generator.
// The Evolution Generator is used to automate the creation of consistent, reliable code.
// Any changes made to this file will be overwritten.

import { TFunction } from 'i18next';
import _escape from 'lodash/escape';
import * as defaultInputBase from 'evolution-frontend/lib/components/inputs/defaultInputBase';
import { defaultConditional } from 'evolution-common/lib/services/widgets/conditionals/defaultConditional';
import * as WidgetConfig from 'evolution-common/lib/services/questionnaire/types';
import * as validations from 'evolution-common/lib/services/widgets/validations/validations';
import * as odSurveyHelpers from 'evolution-common/lib/services/odSurvey/helpers';
import * as choices from '../../common/choices';
import * as customConditionals from '../../common/customConditionals';
import * as customWidgets from './customWidgets';

export const activePersonTitle = customWidgets.activePersonTitle;

export const buttonSwitchPerson = customWidgets.buttonSwitchPerson;

export const personNoWorkTripIntro = customWidgets.personNoWorkTripIntro;

export const personNoWorkTripReason: WidgetConfig.InputSelectType = {
    ...defaultInputBase.inputSelectBase,
    path: 'household.persons.{_activePersonId}.journeys.{_activeJourneyId}.noWorkTripReason',
    twoColumns: false,
    containsHtml: false,
    label: (t: TFunction) =>
        t('travelBehavior:household.persons.{_activePersonId}.journeys.{_activeJourneyId}.noWorkTripReason'),
    choices: choices.noWorkTripReasonChoices,
    conditional: customConditionals.shouldAskForNoWorkTripReasonCustomConditional,
    validations: validations.requiredValidation
};

export const personNoWorkTripReasonSpecify = customWidgets.personNoWorkTripReasonSpecify;

export const personNoSchoolTripIntro = customWidgets.personNoSchoolTripIntro;

export const personNoSchoolTripReason: WidgetConfig.InputSelectType = {
    ...defaultInputBase.inputSelectBase,
    path: 'household.persons.{_activePersonId}.journeys.{_activeJourneyId}.noSchoolTripReason',
    twoColumns: false,
    containsHtml: false,
    label: (t: TFunction) =>
        t('travelBehavior:household.persons.{_activePersonId}.journeys.{_activeJourneyId}.noSchoolTripReason'),
    choices: choices.noSchoolTripReasonChoices,
    conditional: customConditionals.shouldAskForNoSchoolTripReasonCustomConditional,
    validations: validations.requiredValidation
};

export const personNoSchoolTripReasonSpecify = customWidgets.personNoSchoolTripReasonSpecify;

export const buttonTravelBehaviorConfirmNextSection: WidgetConfig.ButtonWidgetConfig = {
    ...defaultInputBase.buttonNextBase,
    path: 'travelBehavior.save',
    label: (t: TFunction) => t('travelBehavior:travelBehavior.save')
};
